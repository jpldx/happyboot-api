kind: pipeline
type: docker
name: happyboot-api

  #environment:
  #  SERVER_WORKSPACE:
  #  SERVER_IP:
  #    from_secret: server_ip
  #  SERVER_USERNAME:
  #    from_secret: server_username
  #  SERVER_PASSWORD:
  #    from_secret: server_password
  #  SERVER_PORT:
  #    from_secret: server_port
  #  DOCKER_REGISTRY_ADDRESS:
  #    from_secret: docker_registry_address
  #  DOCKER_REGISTRY_USERNAME:
  #    from_secret: docker_registry_username
  #  DOCKER_REGISTRY_PASSWORD:
#    from_secret: docker_registry_password

clone:
  disable: true

steps:
  - name: git clone
    image: alpine/git
    pull: if-not-exists
    volumes:
      - name: sshkeys
        path: /root/.ssh
    commands:
      - git clone https://github.com.cnpmjs.org/jpldx/happyboot-api.git .
      - git checkout $DRONE_COMMIT

  - name: mvn package
    pull: if-not-exists
    image: maven:3-jdk-8
    volumes:
      - name: cache # The Volume's name
        path: /root/.m2 # The path in the container
    commands:
      - mvn clean package -DskipTests=true

  - name: docker push [sys]
    pull: if-not-exists
    image: plugins/docker
    #    environment:
    #      DOCKER_REGISTRY_ADDRESS:
    #        from_secret: docker_registry_address
    settings:
      mirror: http://hub-mirror.c.163.com
      dockerfile: happyboot-web/happyboot-web-admin/docker/aliyun/Dockerfile
      repo: 172.19.127.136:5000/happyboot-api/system
      registry: 172.19.127.136:5000
      tags: ${DRONE_BUILD_NUMBER}
      username:
        from_secret: docker_registry_username
      password:
        from_secret: docker_registry_password
      insecure: true

  - name: docker push [consumer]
    pull: if-not-exists
    image: plugins/docker
    settings:
      mirror: http://hub-mirror.c.163.com
      dockerfile: happyboot-mq-consumer/docker/aliyun/Dockerfile
      repo: 172.19.127.136:5000/happyboot-api/consumer
      registry: 172.19.127.136:5000
      tags: ${DRONE_BUILD_NUMBER}
      username:
        from_secret: docker_registry_username
      password:
        from_secret: docker_registry_password
      insecure: true

  - name: scp files [docker-compose.yml]
    image: appleboy/drone-scp
    settings:
      host:
        from_secret: server_ip
      username:
        from_secret: server_username
      password:
        from_secret: server_password
      port:
        from_secret: server_port
      target: /usr/local/docker/docker-compose/happyboot-api
      source: docker-compose.yml

  - name: docker-compose up
    pull: if-not-exists
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: server_ip
      username:
        from_secret: server_username
      password:
        from_secret: server_password
      port:
        from_secret: server_port
      script:
        - cd /usr/local/docker/docker-compose/happyboot-api
        - echo DRONE_BUILD_NUMBER=${DRONE_BUILD_NUMBER} > .env
        - docker-compose down
        - docker-compose --env-file .env up -d

  - name: dingtalk
    pull: if-not-exists
    image: guoxudongdocker/drone-dingtalk
    settings:
      token:
        from_secret: dingtalk_token
      type: markdown
      message_color: true
      message_pic: true
      sha_link: true
    when:
      status:
        - failure
        - success

        # 可以关闭代码分析，提高构建效率
        #  - name: code-analysis
        #    pull: if-not-exists
        #    image: aosapps/drone-sonar-plugin
        #    settings:
        #      sonar_host: http://10.10.0.14:9002
        #      sonar_token: a06df3845eb2dfb07b319544ce03fbd2d866d7e5

        #  - name: build image > mq-consumer
        #    pull: if-not-exists
        #    image: plugins/docker
        #    settings:
        #      mirror: https://docker.mirrors.ustc.edu.cn
        #      dockerfile: happyboot-mq-consumer/docker/test/Dockerfile
        #      repo: 10.10.0.14:5000/happyboot/mq-consumer
        #      registry: 10.10.0.14:5000
        #      tags: ${DRONE_BUILD_NUMBER}
        #      username: root
        #      password: lt@123456
        #      insecure: true

        #        - docker-compose up -d
        #  - name: image：xxl-executor
        #    pull: if-not-exists
      #    image: plugins/docker
  #    settings:
  #      mirror: https://docker.mirrors.ustc.edu.cn
  #      dockerfile: ltit-cloud-task/ltit-cloud-task-instance/docker/test/Dockerfile
  #      repo: 10.10.0.14:5000/happyboot/xxl-executor
  #      registry: 10.10.0.14:5000
  #      tags: ${DRONE_BUILD_NUMBER}
  #      username: root
  #      password: lt@123456
  #      insecure: true

  #  - name: container：xxl-executor
  #    pull: if-not-exists
  #    image: appleboy/drone-ssh
  #    settings:
  #      host: 10.10.0.27
  #      username: root
  #      password: lt@123456
  #      port: 22
  #      script:
#        - echo start update container
#        - echo login registry 10.10.0.14:5000
#        - docker login -u root -p lt@123456 10.10.0.14:5000
#        - docker pull 10.10.0.14:5000/happyboot/xxl-executor:${DRONE_BUILD_NUMBER}
#        - list=$(docker ps -a| grep happyboot-xxl-executor* | awk '{print $1}')
#        - test "$list" = "" && echo "none happyboot-xxl-executor containers running" || docker stop $list
#        - docker run -d --network over -p6632:8080 -p8888:8888 -v /data/happyboot/xxl-executor:/upload -v /etc/localtime:/etc/localtime:ro -e TZ=Asia/Shanghai --privileged=true --name=happyboot-xxl-executor-${DRONE_BUILD_NUMBER} 10.10.0.14:5000/happyboot/xxl-executor:${DRONE_BUILD_NUMBER}



trigger:
  branch:
    - master
  event:
    - push

volumes:
  - name: cache
    host:
      path: /tmp/cache/maven
  - name: sshkeys
    host:
      path: /root/.ssh
